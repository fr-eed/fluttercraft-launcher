name: "MacOS"

on:
  pull_request:
    branches:
      - dev
      - test
      - main
  push:
    branches:
      - dev
      - test
      - main

jobs:  
  build:      
    name: Build & Release 
    runs-on: macos-latest 

    steps:
        #1 Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3

        #2 Setup Flutter
      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.1'
          channel: 'stable'

        #3 Install Dependencies
      - name: Install Dependencies
        run: flutter pub get

       #4 Building APP
      - name: Build App
        run: flutter build macos --release

        #5 Upload Artifacts
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Releases
          path: |
            build/macos/Build/Products/Release/FlutterCraft.app

        #6 Extract Version
      - name: Extract version from pubspec.yaml
        id: extract_version
        run: |
          version=$(grep '^version: ' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
          echo "VERSION=$version" >> $GITHUB_ENV


      # 7. Auto-Increment Version
      - name: Auto-Increment Version
        shell: bash
        run: |
          echo "🔥 Fetching all tags..."
          git fetch --tags

          version="${{ env.VERSION }}"
          build=0

          echo "📢 Initial VERSION: $version"

          # Extract base version (removes +build part if exists)
          base_version=$(echo "$version" | cut -d'+' -f1)
          echo "🧐 Base Version Extracted: $base_version"

          # Check if base version exists
          if git tag -l "v$base_version" | grep -q .; then
            echo "✅ Base version exists. Finding next build number..."
            
            # Increment build number until an unused one is found
            while git tag -l "v$base_version+build$build" | grep -q .; do
              ((build++))
            done
          else
            echo "❌ Base version does not exist. Using base version as final."
          fi

          final_version="$base_version+build$build"
          echo "🎯 Final Computed Version: $final_version"

          echo "VERSION=$final_version" >> $GITHUB_ENV



      # 8. Package into DMG
      - name: Package into DMG
        run: |
          APP_NAME="FlutterCraft"
          DMG_NAME="${APP_NAME}.dmg"
          mkdir -p build/macos/dmg
          hdiutil create -volname "${APP_NAME}" -srcfolder "build/macos/Build/Products/Release/${APP_NAME}.app" -ov -format UDZO "build/macos/dmg/${DMG_NAME}"

      # 9. Upload Release
      - name: Upload Release
        if: github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v2
        with:
          files: build/macos/dmg/FlutterCraft.dmg
          tag_name: v${{ env.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
