name: "Linux"

on:
  pull_request:
    branches:
      - dev
      - test
      - main
  push:
    branches:
      - dev
      - test
      - main

jobs:
  build:
    name: Build & Release
    runs-on: ubuntu-22.04

    steps:
      # 1. Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # 2. Setup Flutter
      - name: Set Up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.1'
          channel: 'stable'

      # 4. Install System Dependencies
      - name: Install Linux Dependencies
        run: |
          sudo apt update -y
          sudo apt-get install -y ninja-build libgtk-3-dev libfuse2

      # 5. Install Dependencies
      - name: Install Dependencies
        run: flutter pub get

      # 6. Build Linux App
      - name: Build App
        run: flutter build linux --release
      
      # 7. Create Desktop File
      #Icon=fluttercraft_launcher
      - name: Create Desktop File
        run: |
          cat > build/linux/x64/release/bundle/fluttercraft_launcher.desktop <<EOF
          [Desktop Entry]
          Version=1.0
          Type=Application
          Terminal=false
          Name=FlutterCraft Launcher
          Exec=fluttercraft_launcher %u
          Categories=Utility;
          EOF

      # 8. Package App as AppImage
      - name: Package App as AppImage
        run: |
          cd build/linux/x64/release/bundle
          mkdir AppDir
          shopt -s extglob
          mv !(AppDir) AppDir/
          wget -q https://github.com/AppImage/AppImageKit/releases/latest/download/appimagetool-x86_64.AppImage
          chmod +x appimagetool-x86_64.AppImage
          ./appimagetool-x86_64.AppImage AppDir fluttercraft_launcher.AppImage


      # 9. Extract Version from pubspec.yaml
      - name: Extract version from pubspec.yaml
        id: extract_version
        shell: bash
        run: |
          version=$(grep '^version: ' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
          echo "VERSION=$version" >> $GITHUB_ENV

      # 10. Check if Tag Exists
      - name: Check if Tag Exists
        id: check_tag
        shell: bash
        run: |
          version="${{ env.VERSION }}"
          build=0

          # Extract base version (removes +build part if exists)
          base_version=$(echo "$version" | cut -d'+' -f1)

          # Check if base version exists as a tag
          if git rev-parse "v$base_version" >/dev/null 2>&1; then
            echo "TAG_EXISTS=true" >> $GITHUB_ENV
          else
            echo "TAG_EXISTS=false" >> $GITHUB_ENV
            echo "VERSION=$base_version" >> $GITHUB_ENV
            exit 0
          fi

          # If tag exists, increment build number until a free version is found
          while git rev-parse "v$base_version+$build" >/dev/null 2>&1; do
            ((build++))
          done

          echo "VERSION=$base_version+$build" >> $GITHUB_ENV

      # 11. Upload Release
      - name: Upload Release
        if: github.ref == 'refs/heads/main'
        uses: softprops/action-gh-release@v2
        with:
          files: build/linux/x64/release/bundle/fluttercraft_launcher.AppImage
          tag_name: v${{ env.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
